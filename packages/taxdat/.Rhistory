total_suspected_cases~unimproved_water*rural_urban+unimproved_sanitation*rural_urban,
offset=log_population,
data=data,
id=interaction(country,spatial_scale),
family = 'poisson',
corstr = 'independence'
)
##calcualte the 95% CI for combined effects
coefs <- summary(model4)$coefficients[,1]
X=model.matrix(model4)
dof <- nrow(X) - ncol(X)#degree of freedom
coefs_var=vcov(model4)
halfCI_unsat_model4 <- qt(0.975, dof) * sqrt(coefs_var[4,4]+coefs_var[6,6]+2*coefs_var[4,6])
CI_unsat_model4=exp(as.vector(c(coefs[4]+coefs[6]-halfCI_unsat_model4, coefs[4]+coefs[6]+halfCI_unsat_model4)))
coef_unsat_model4=exp(coefs[4]+coefs[6])
SE_unsat_model4=2*halfCI_unsat_model4/(2*1.96)
z_unsat_model4 =(coefs[4]+coefs[6])/SE_unsat_model4
P_unsat_model4=exp(-0.717*z_unsat_model4-0.416*(z_unsat_model4)^2)
halfCI_unwat_model4 <- qt(0.975, dof) * sqrt(coefs_var[2,2]+coefs_var[5,5]+2*coefs_var[2,5])
CI_unwat_model4=exp(as.vector(c(coefs[2]+coefs[5]-halfCI_unwat_model4, coefs[2]+coefs[5]+halfCI_unwat_model4)))
coef_unwat_model4=exp(coefs[2]+coefs[5])
SE_unwat_model4=2*halfCI_unwat_model4/(2*1.96)
z_unwat_model4 =(coefs[2]+coefs[5])/SE_unwat_model4
P_unwat_model4=exp(-0.717*z_unwat_model4-0.416*(z_unwat_model4)^2)
####
model5=geepack::geeglm(
total_suspected_cases~piped_water+other_sanitation,
offset=log_population,
data=data,
id=interaction(country,spatial_scale),
family = 'poisson',
corstr = 'independence'
)
model6=geepack::geeglm(
total_suspected_cases~piped_water*rural_urban+other_sanitation*rural_urban,
offset=log_population,
data=data,
id=interaction(country,spatial_scale),
family = 'poisson',
corstr = 'independence'
)
##calcualte the 95% CI for combined effects
coefs <- summary(model6)$coefficients[,1]
X=model.matrix(model6)
dof <- nrow(X) - ncol(X)#degree of freedom
coefs_var=vcov(model6)
halfCI_piped_model6 <- qt(0.975, dof) * sqrt(coefs_var[2,2]+coefs_var[5,5]+2*coefs_var[2,5])
CI_piped_model6=exp(as.vector(c(coefs[2]+coefs[5]-halfCI_piped_model6, coefs[2]+coefs[5]+halfCI_piped_model6)))
coef_piped_model6=exp(coefs[2]+coefs[5])
SE_piped_model6=2*halfCI_piped_model6/(2*1.96)
z_piped_model6 =(coefs[2]+coefs[5])/SE_piped_model6
P_piped_model6=exp(-0.717*z_piped_model6-0.416*(z_piped_model6)^2)
halfCI_othsat_model6 <- qt(0.975, dof) * sqrt(coefs_var[4,4]+coefs_var[6,6]+2*coefs_var[4,6])
CI_othsat_model6=exp(as.vector(c(coefs[4]+coefs[6]-halfCI_othsat_model6, coefs[4]+coefs[6]+halfCI_othsat_model6)))
coef_othsat_model6=exp(coefs[4]+coefs[6])
SE_othsat_model6=2*halfCI_othsat_model6/(2*1.96)
z_othsat_model6 =(coefs[4]+coefs[6])/SE_othsat_model6
P_othsat_model6=exp(-0.717*z_othsat_model6-0.416*(z_othsat_model6)^2)
####
model7=geepack::geeglm(
total_suspected_cases~surface_water+open_defecation,
offset=log_population,
data=data,
id=interaction(country,spatial_scale),
family = 'poisson',
corstr = 'independence'
)
model8=geepack::geeglm(
total_suspected_cases~surface_water*rural_urban+open_defecation*rural_urban,
offset=log_population,
data=data,
id=interaction(country,spatial_scale),
family = 'poisson',
corstr = 'independence'
)
##calcualte the 95% CI for combined effects
coefs <- summary(model8)$coefficients[,1]
X=model.matrix(model8)
dof <- nrow(X) - ncol(X)#degree of freedom
coefs_var=vcov(model8)
halfCI_suf_model8 <- qt(0.975, dof) * sqrt(coefs_var[2,2]+coefs_var[5,5]+2*coefs_var[2,5])
CI_suf_model8=exp(as.vector(c(coefs[2]+coefs[5]-halfCI_suf_model8, coefs[2]+coefs[5]+halfCI_suf_model8)))
coef_suf_model8=exp(coefs[2]+coefs[5])
SE_suf_model8=2*halfCI_suf_model8/(2*1.96)
z_suf_model8 =(coefs[2]+coefs[5])/SE_suf_model8
P_suf_model8=exp(-0.717*z_suf_model8-0.416*(z_suf_model8)^2)
halfCI_od_model8 <- qt(0.975, dof) * sqrt(coefs_var[4,4]+coefs_var[6,6]+2*coefs_var[4,6])
CI_od_model8=exp(as.vector(c(coefs[4]+coefs[6]-halfCI_od_model8, coefs[4]+coefs[6]+halfCI_od_model8)))
coef_od_model8=exp(coefs[4]+coefs[6])
SE_od_model8=2*halfCI_od_model8/(2*1.96)
z_od_model8 =(coefs[4]+coefs[6])/SE_od_model8
P_od_model8=exp(-0.717*z_od_model8-0.416*(z_od_model8)^2)
####
model9=geepack::geeglm(
total_suspected_cases~piped_water+surface_water+other_sanitation+open_defecation,
offset=log_population,
data=data,
id=interaction(country,spatial_scale),
family = 'poisson',
corstr = 'independence'
)
model10=geepack::geeglm(
total_suspected_cases~piped_water*rural_urban+surface_water*rural_urban+other_sanitation*rural_urban+open_defecation*rural_urban,
offset=log_population,
data=data,
id=interaction(country,spatial_scale),
family = 'poisson',
corstr = 'independence'
)
##calcualte the 95% CI for combined effects
coefs <- summary(model10)$coefficients[,1]
X=model.matrix(model10)
dof <- nrow(X) - ncol(X)#degree of freedom
coefs_var=vcov(model10)
halfCI_piped_model10 <- qt(0.975, dof) * sqrt(coefs_var[2,2]+coefs_var[7,7]+2*coefs_var[2,7])
CI_piped_model10=exp(as.vector(c(coefs[2]+coefs[7]-halfCI_piped_model10, coefs[2]+coefs[7]+halfCI_piped_model10)))
coef_piped_model10=exp(coefs[2]+coefs[7])
SE_piped_model10=2*halfCI_piped_model10/(2*1.96)
z_piped_model10 =(coefs[2]+coefs[7])/SE_piped_model10
P_piped_model10=exp(-0.717*z_piped_model10-0.416*(z_piped_model10)^2)
halfCI_othsat_model10 <- qt(0.975, dof) * sqrt(coefs_var[5,5]+coefs_var[9,9]+2*coefs_var[5,9])
CI_othsat_model10=exp(as.vector(c(coefs[5]+coefs[9]-halfCI_othsat_model10, coefs[5]+coefs[9]+halfCI_othsat_model10)))
coef_othsat_model10=exp(coefs[5]+coefs[9])
SE_othsat_model10=2*halfCI_othsat_model10/(2*1.96)
z_othsat_model10 =(coefs[5]+coefs[9])/SE_othsat_model10
P_othsat_model10=exp(-0.717*z_othsat_model10-0.416*(z_othsat_model10)^2)
halfCI_suf_model10 <- qt(0.975, dof) * sqrt(coefs_var[4,4]+coefs_var[8,8]+2*coefs_var[4,8])
CI_suf_model10=exp(as.vector(c(coefs[4]+coefs[8]-halfCI_suf_model10, coefs[4]+coefs[8]+halfCI_suf_model10)))
coef_suf_model10=exp(coefs[4]+coefs[8])
SE_suf_model10=2*halfCI_suf_model10/(2*1.96)
z_suf_model10 =(coefs[4]+coefs[8])/SE_suf_model10
P_suf_model10=exp(-0.717*z_suf_model10-0.416*(z_suf_model10)^2)
halfCI_od_model10 <- qt(0.975, dof) * sqrt(coefs_var[6,6]+coefs_var[10,10]+2*coefs_var[6,10])
CI_od_model10=exp(as.vector(c(coefs[6]+coefs[10]-halfCI_od_model10, coefs[6]+coefs[10]+halfCI_od_model10)))
coef_od_model10=exp(coefs[6]+coefs[10])
SE_od_model10=2*halfCI_od_model10/(2*1.96)
z_od_model10 =(coefs[6]+coefs[10])/SE_od_model10
P_od_model10=exp(-0.717*z_od_model10-0.416*(z_od_model10)^2)
####
model11=geepack::geeglm(
total_suspected_cases~rural_urban,
offset=log_population,
data=data,
id=interaction(country,spatial_scale),
family = 'poisson',
corstr = 'independence'
)
#summary table
Model1=model1%>%parameters::parameters(exponentiate=T)%>%mutate(Models='Model1',QIC=format(QIC(model1)[1],scientific=F))%>%dplyr::select(Parameter,Coefficient,CI,CI_low,CI_high,p,Models,QIC)
Model2=model2%>%parameters::parameters(exponentiate=T)%>%mutate(Models='Model2',QIC=format(QIC(model2)[1],scientific=F))%>%dplyr::select(Parameter,Coefficient,CI,,CI_low,CI_high,p,Models,QIC)
Model2$Coefficient[5]=coef_wat_model2
Model2$CI_low[5]=CI_wat_model2[1]
Model2$CI_high[5]=CI_wat_model2[2]
Model2$p[5]=P_wat_model2
Model2$Coefficient[6]=coef_sat_model2
Model2$CI_low[6]=CI_sat_model2[1]
Model2$CI_high[6]=CI_sat_model2[2]
Model2$p[6]=P_sat_model2
Model3=model3%>%parameters::parameters(exponentiate=T)%>%mutate(Models='Model3',QIC=format(QIC(model3)[1],scientific=F))%>%dplyr::select(Parameter,Coefficient,CI,CI_low,CI_high,p,Models,QIC)
Model4=model4%>%parameters::parameters(exponentiate=T)%>%mutate(Models='Model4',QIC=format(QIC(model4)[1],scientific=F))%>%dplyr::select(Parameter,Coefficient,CI,CI_low,CI_high,p,Models,QIC)
Model4$Coefficient[5]=coef_unwat_model4
Model4$CI_low[5]=CI_unwat_model4[1]
Model4$CI_high[5]=CI_unwat_model4[2]
Model4$p[5]=P_unwat_model4
Model4$Coefficient[6]=coef_unsat_model4
Model4$CI_low[6]=CI_unsat_model4[1]
Model4$CI_high[6]=CI_unsat_model4[2]
Model4$p[6]=P_unsat_model4
Model5=model5%>%parameters::parameters(exponentiate=T)%>%mutate(Models='Model5',QIC=format(QIC(model5)[1],scientific=F))%>%dplyr::select(Parameter,Coefficient,CI,CI_low,CI_high,p,Models,QIC)
Model6=model6%>%parameters::parameters(exponentiate=T)%>%mutate(Models='Model6',QIC=format(QIC(model6)[1],scientific=F))%>%dplyr::select(Parameter,Coefficient,CI,CI_low,CI_high,p,Models,QIC)
Model6$Coefficient[5]=coef_piped_model6
Model6$CI_low[5]=CI_piped_model6[1]
Model6$CI_high[5]=CI_piped_model6[2]
Model6$p[5]=P_piped_model6
Model6$Coefficient[6]=coef_othsat_model6
Model6$CI_low[6]=CI_othsat_model6[1]
Model6$CI_high[6]=CI_othsat_model6[2]
Model6$p[6]=P_othsat_model6
Model7=model7%>%parameters::parameters(exponentiate=T)%>%mutate(Models='Model7',QIC=format(QIC(model7)[1],scientific=F))%>%dplyr::select(Parameter,Coefficient,CI,CI_low,CI_high,p,Models,QIC)
Model8=model8%>%parameters::parameters(exponentiate=T)%>%mutate(Models='Model8',QIC=format(QIC(model8)[1],scientific=F))%>%dplyr::select(Parameter,Coefficient,CI,CI_low,CI_high,p,Models,QIC)
Model8$Coefficient[5]=coef_suf_model8
Model8$CI_low[5]=CI_suf_model8[1]
Model8$CI_high[5]=CI_suf_model8[2]
Model8$p[5]=P_suf_model8
Model8$Coefficient[6]=coef_od_model8
Model8$CI_low[6]=CI_od_model8[1]
Model8$CI_high[6]=CI_od_model8[2]
Model8$p[6]=P_od_model8
Model9=model9%>%parameters::parameters(exponentiate=T)%>%mutate(Models='Model9',QIC=format(QIC(model9)[1],scientific=F))%>%dplyr::select(Parameter,Coefficient,CI,CI_low,CI_high,p,Models,QIC)
Model10=model10%>%parameters::parameters(exponentiate=T)%>%mutate(Models='Model10',QIC=format(QIC(model10)[1],scientific=F))%>%dplyr::select(Parameter,Coefficient,CI,CI_low,CI_high,p,Models,QIC)
Model10$Coefficient[7]=coef_piped_model10
Model10$CI_low[7]=CI_piped_model10[1]
Model10$CI_high[7]=CI_piped_model10[2]
Model10$p[7]=P_piped_model10
Model10$Coefficient[8]=coef_suf_model10
Model10$CI_low[8]=CI_suf_model10[1]
Model10$CI_high[8]=CI_suf_model10[2]
Model10$p[8]=P_suf_model10
Model10$Coefficient[9]=coef_othsat_model10
Model10$CI_low[9]=CI_othsat_model10[1]
Model10$CI_high[9]=CI_othsat_model10[2]
Model10$p[9]=P_othsat_model10
Model10$Coefficient[10]=coef_od_model10
Model10$CI_low[10]=CI_od_model10[1]
Model10$CI_high[10]=CI_od_model10[2]
Model10$p[10]=P_od_model10
Model11=model11%>%parameters::parameters(exponentiate=T)%>%mutate(Models='Model11',QIC=format(QIC(model11)[1],scientific=F))%>%dplyr::select(Parameter,Coefficient,CI,CI_low,CI_high,p,Models,QIC)
Model1_2=bind_rows(Model1,Model2)%>%
subset(!str_detect(Parameter,'Intercept'))%>%
mutate(Parameter=ifelse(str_detect(Parameter,':rural_urbanurban|rural_urbanurban:'),paste0(str_replace_all(Parameter,':rural_urbanurban|rural_urbanurban:',""),"(urban)"),Parameter))%>%
mutate(Parameter=ifelse(str_detect(Parameter,"water_percent"),str_replace_all(Parameter,"water_percent","improved water"),
ifelse(str_detect(Parameter,"sanitation_percent"),str_replace_all(Parameter,"sanitation_percent","Improved sanitation"),Parameter)))%>%arrange(desc(Models))%>%arrange(desc(Parameter))%>%subset(is.na(Parameter)==F)
Model3_4=bind_rows(Model3,Model4)%>%
subset(!str_detect(Parameter,'Intercept'))%>%
mutate(Parameter=ifelse(str_detect(Parameter,':rural_urbanurban|rural_urbanurban:'),paste0(str_replace_all(Parameter,':rural_urbanurban|rural_urbanurban:',""),"(urban)"),Parameter))%>%
arrange(desc(Models))%>%arrange(desc(Parameter))%>%subset(is.na(Parameter)==F)%>%subset(is.na(Parameter)==F)
Model5_6=bind_rows(Model5,Model6)%>%
subset(!str_detect(Parameter,'Intercept'))%>%
mutate(Parameter=ifelse(str_detect(Parameter,':rural_urbanurban|rural_urbanurban:'),paste0(str_replace_all(Parameter,':rural_urbanurban|rural_urbanurban:',""),"(urban)"),Parameter))%>%
mutate(Parameter=ifelse(str_detect(Parameter,"other_sanitation"),str_replace_all(Parameter,"other_sanitation","sewer/septic sanitation"),Parameter))%>%
arrange(desc(Models))%>%arrange(desc(Parameter))%>%subset(is.na(Parameter)==F)%>%subset(is.na(Parameter)==F)
Model7_8=bind_rows(Model7,Model8)%>%
subset(!str_detect(Parameter,'Intercept'))%>%
mutate(Parameter=ifelse(str_detect(Parameter,':rural_urbanurban|rural_urbanurban:'),paste0(str_replace_all(Parameter,':rural_urbanurban|rural_urbanurban:',""),"(urban)"),Parameter))%>%
arrange(desc(Models))%>%arrange(desc(Parameter))%>%subset(is.na(Parameter)==F)%>%subset(is.na(Parameter)==F)
Model9_10=bind_rows(Model9,Model10)%>%
subset(!str_detect(Parameter,'Intercept'))%>%
mutate(Parameter=ifelse(str_detect(Parameter,':rural_urbanurban|rural_urbanurban:'),paste0(str_replace_all(Parameter,':rural_urbanurban|rural_urbanurban:',""),"(urban)"),Parameter))%>%
mutate(Parameter=ifelse(str_detect(Parameter,"other_sanitation"),str_replace_all(Parameter,"other_sanitation","sewer/septic sanitation"),Parameter))%>%
arrange(desc(Models))%>%arrange(desc(Parameter))%>%subset(is.na(Parameter)==F)
Model11=Model11%>%
subset(!str_detect(Parameter,'Intercept'))%>%
mutate(Parameter=ifelse(str_detect(Parameter,':rural_urbanurban|rural_urbanurban:'),paste0(str_replace_all(Parameter,':rural_urbanurban|rural_urbanurban:',""),"(urban)"),Parameter))%>%
arrange(desc(Models))%>%arrange(desc(Parameter))%>%subset(is.na(Parameter)==F)
Table_by_variable=bind_rows(
Model1_2,
Model3_4,
Model5_6,
Model7_8,
Model9_10,
Model11
)%>%arrange(Models)%>%arrange(desc(Parameter))%>%
mutate(Coefficient=round(Coefficient,2),
#SE=round(SE,2),
CI_low=round(CI_low,2),
CI_high=round(CI_high,2))
#Chi2=round(Chi2,2))
Table_by_variable[which(Table_by_variable$Parameter=='rural_urbanurban'),]$Parameter='Urban (ref=rural)'
Table_by_model=bind_rows(
Model1_2%>%arrange(desc(Parameter)),
Model1_2[1,]%>%replace(is.na(.)==F,NA),
Model3_4%>%arrange(desc(Parameter)),
Model3_4[1,]%>%replace(is.na(.)==F,NA),
Model5_6%>%arrange(desc(Parameter)),
Model5_6[1,]%>%replace(is.na(.)==F,NA),
Model7_8%>%arrange(desc(Parameter)),
Model7_8[1,]%>%replace(is.na(.)==F,NA),
Model9_10%>%arrange(desc(Parameter)),
Model7_8[1,]%>%replace(is.na(.)==F,NA),
Model11
)%>%
mutate(Coefficient=round(Coefficient,2),
#SE=round(SE,2),
CI_low=round(CI_low,2),
CI_high=round(CI_high,2))
#Chi2=round(Chi2,2))
Table_by_model[which(Table_by_model$Parameter=='rural_urbanurban'),]$Parameter='Urban (ref=rural)'
Table_by_variable
Table_by_model
#25 18
Table_by_variable$Models=factor(Table_by_variable$Models,levels=c(
"Model1","Model2","Model3","Model4","Model5","Model6",
"Model7","Model8","Model9","Model10","Model11"
))
Table_by_variable$rural_urban='rural'
Table_by_variable[str_detect(Table_by_variable$Parameter,"urban"),]$rural_urban='urban'
##estimate the
ggplot(data=Table_by_variable[which(str_detect(Table_by_variable$Parameter,"ref=rural")==F),],
aes(x=Coefficient,
y=Parameter,
col=Parameter))+
geom_vline(xintercept = 1,lwd=1)+
geom_errorbar(aes(xmin=CI_low,xmax=CI_high),size=2,
position=position_dodge(width = 0.5))+
geom_point(size=4, pch=21,position = position_dodge(width = 0.5)) +
ggplot2::theme(plot.margin = grid::unit(c(1, 1, 1, 1), "cm"),
legend.position = 'bottom',
legend.text = element_text(size = 20),
legend.title = element_text(size=20),
strip.text = element_text(size=20),
axis.text.y=element_text(size=20),
axis.text.x=element_text(size=20),
plot.title = element_text(size=22))+
labs(title='figure1')+
geom_text(aes(label = Parameter),position = position_dodge(width = 1),vjust = -0.8,size = 5,color='black')+
facet_wrap(~Models, ncol = 2)
ggplot(data=Table_by_variable[which(str_detect(Table_by_variable$Parameter,"ref=rural")==F),],
aes(x=Coefficient,
y=Parameter,
col=rural_urban))+
geom_vline(xintercept = 1,lwd=1)+
geom_errorbar(aes(xmin=CI_low,xmax=CI_high),size=2,
position=position_dodge(width = 0.5))+
geom_point(size=4, pch=21,position = position_dodge(width = 0.5)) +
ggplot2::theme(plot.margin = grid::unit(c(1, 1, 1, 1), "cm"),
legend.position = 'bottom',
legend.text = element_text(size = 20),
legend.title = element_text(size=20),
strip.text = element_text(size=20),
axis.text.y=element_text(size=20),
axis.text.x=element_text(size=20),
plot.title = element_text(size=22))+
labs(title='figure2')+
geom_text(aes(label = Parameter),position = position_dodge(width = 1),vjust = -0.8,size = 5,color='black')+
facet_wrap(~Models, ncol = 2)
sanitation_indicator=Table_by_variable[which(str_detect(Table_by_variable$Parameter,"ref=rural")==F&!Table_by_variable$Parameter%in%c("piped_water","improved water(urban)","improved water","unimproved_water(urban)","unimproved_water","surface_water(urban)","surface_water","piped_water(urban)")),]
sanitation_indicator$Parameter=factor(sanitation_indicator$Parameter,
levels=c("Improved sanitation(urban)","Improved sanitation","sewer/septic sanitation(urban)","sewer/septic sanitation","unimproved_sanitation(urban)","unimproved_sanitation (rural)","open_defecation(urban)","open_defecation"))
unique(sanitation_indicator$Parameter)
sanitation_indicator=Table_by_variable[which(str_detect(Table_by_variable$Parameter,"ref=rural")==F&!Table_by_variable$Parameter%in%c("piped_water","improved water(urban)","improved water","unimproved_water(urban)","unimproved_water","surface_water(urban)","surface_water","piped_water(urban)")),]
unique(sanitation_indicator$Parameter)
ggplot(data=Table_by_variable[which(str_detect(Table_by_variable$Parameter,"ref=rural")==F),],
aes(x=Coefficient,
y=Parameter,
col=rural_urban))+
geom_vline(xintercept = 1,lwd=1)+
geom_errorbar(aes(xmin=CI_low,xmax=CI_high),size=2,
position=position_dodge(width = 0.5))+
geom_point(size=4, pch=21,position = position_dodge(width = 0.5)) +
ggplot2::theme(plot.margin = grid::unit(c(1, 1, 1, 1), "cm"),
legend.position = 'bottom',
legend.text = element_text(size = 20),
legend.title = element_text(size=20),
strip.text = element_text(size=20),
axis.text.y=element_text(size=20),
axis.text.x=element_text(size=20),
plot.title = element_text(size=22))+
labs(title='figure2')+
#geom_text(aes(label = Parameter),position = position_dodge(width = 1),vjust = -0.8,size = 5,color='black')+
facet_wrap(~Parameter, ncol = 2)
ggplot(data=water_indicator,
aes(x=Coefficient,
y=Parameter,
col=Parameter))+
geom_vline(xintercept = 1,lwd=1)+
geom_errorbar(aes(xmin=CI_low,xmax=CI_high),size=2,
position=position_dodge(width = 0.5))+
geom_point(size=4, pch=21,position = position_dodge(width = 0.5)) +
ggplot2::theme(plot.margin = grid::unit(c(1, 1, 1, 1), "cm"),
legend.position = 'bottom',
legend.text = element_text(size = 20),
legend.title = element_text(size=20),
strip.text = element_text(size=20),
axis.text.y=element_text(size=20),
axis.text.x=element_text(size=20),
plot.title = element_text(size=22))+
labs(title='figure3: water indicators')+
geom_text(aes(label = Parameter),position = position_dodge(width = 1),vjust = -0.8,size = 5,color='black')+
facet_wrap(~Models, ncol = 3)
ggplot(data=water_indicator,
aes(x=Coefficient,
y=Parameter,
col=Parameter))+
geom_vline(xintercept = 1,lwd=1)+
geom_errorbar(aes(xmin=CI_low,xmax=CI_high),size=2,
position=position_dodge(width = 0.5))+
geom_point(size=4, pch=21,position = position_dodge(width = 0.5)) +
ggplot2::theme(plot.margin = grid::unit(c(1, 1, 1, 1), "cm"),
legend.position = 'bottom',
legend.text = element_text(size = 20),
legend.title = element_text(size=20),
strip.text = element_text(size=20),
axis.text.y=element_text(size=20),
axis.text.x=element_text(size=20),
plot.title = element_text(size=22))+
labs(title='figure3: water indicators')+
geom_text(aes(label = Parameter),position = position_dodge(width = 1),vjust = -0.8,size = 5,color='black')+
facet_wrap(~rural_urban, ncol = 3)
ggplot(data=sanitation_indicator,
aes(x=Coefficient,
y=Parameter,
col=Parameter))+
geom_vline(xintercept = 1,lwd=1)+
geom_errorbar(aes(xmin=CI_low,xmax=CI_high),size=2,
position=position_dodge(width = 0.5))+
geom_point(size=4, pch=21,position = position_dodge(width = 0.5)) +
ggplot2::theme(plot.margin = grid::unit(c(1, 1, 1, 1), "cm"),
legend.position = 'bottom',
legend.text = element_text(size = 20),
legend.title = element_text(size=20),
strip.text = element_text(size=20),
axis.text.y=element_text(size=20),
axis.text.x=element_text(size=20),
plot.title = element_text(size=22))+
labs(title='figure4: sanitation indicators')+
geom_text(aes(label = Parameter),position = position_dodge(width = 1),vjust = -0.8,size = 5,color='black')+
facet_wrap(~rural_urban, ncol = 3)
ggplot(data=water_indicator,
aes(x=Coefficient,
y=Parameter,
col=Models))+
geom_vline(xintercept = 1,lwd=1)+
geom_errorbar(aes(xmin=CI_low,xmax=CI_high),size=2,
position=position_dodge(width = 0.5))+
geom_point(size=4, pch=21,position = position_dodge(width = 0.5)) +
ggplot2::theme(plot.margin = grid::unit(c(1, 1, 1, 1), "cm"),
legend.position = 'bottom',
legend.text = element_text(size = 20),
legend.title = element_text(size=20),
strip.text = element_text(size=20),
axis.text.y=element_text(size=20),
axis.text.x=element_text(size=20),
plot.title = element_text(size=22))+
labs(title='figure3: water indicators')+
geom_text(aes(label = Parameter),position = position_dodge(width = 1),vjust = -1.2,size = 5,color='black')+
facet_wrap(~rural_urban, ncol = 1)
ggplot(data=water_indicator,
aes(x=Coefficient,
y=Parameter,
col=Models))+
geom_vline(xintercept = 1,lwd=1)+
geom_errorbar(aes(xmin=CI_low,xmax=CI_high),size=2,
position=position_dodge(width = 0.5))+
geom_point(size=4, pch=21,position = position_dodge(width = 0.5)) +
ggplot2::theme(plot.margin = grid::unit(c(1, 1, 1, 1), "cm"),
legend.position = 'bottom',
legend.text = element_text(size = 20),
legend.title = element_text(size=20),
strip.text = element_text(size=20),
axis.text.y=element_text(size=20),
axis.text.x=element_text(size=20),
plot.title = element_text(size=22))+
labs(title='figure3: water indicators')+
geom_text(aes(label = Parameter),position = position_dodge(width = 1),vjust = -1.5,size = 5,color='black')+
facet_wrap(~rural_urban, ncol = 1)
knitr::opts_chunk$set(echo = FALSE)
#tinytex::install_tinytex()
library(tidyverse)
library(ggthemes)
library(ggplot2)
library(hglm)
library(scales)
library(lubridate)
library(lme4)
library(ggpubr)
library(AER)
library(jtools)
library(kableExtra)
library(ggstance)
library(broom.mixed)
library(sjPlot)
library(viridis)
library(data.table)
library(parameters)
library(forestmodel)
library(ggrepel)
library(ggplot2)
library(tidyverse)
library(dplyr)
library(knitr)
library(corrplot)
library(Hmisc)
library(geepack)
library(ggeffects)
library(stringr)
##Figure 4 Forrest plot for model####
data=read.csv(dir(params$data_directory,pattern='location_period_wash_all_variable_new_definition2.csv',full.names = T))%>%
subset(!spatial_scale=='country'& !spatial_scale=="admin4 or lower"&!population=='missing_shp'&EpiPeriod=='complete')%>%
subset(spatial_scale=='admin2')
#any(data$population=='missing_shp')
data$population=as.numeric(data$population)
data=data[which(!data$country=="AGO"&
!data$country=="CAF"&
!data$country=='GNB'&
!(data$country=="CIV"&data$spatial_scale=="admin2")&
!(data$country=="COG"&data$spatial_scale=="admin1")&
!(data$country=="KEN"&data$spatial_scale=="admin3")&
!(data$country=='MOZ'&data$spatial_scale=='admin1')&
!(data$country=="NAM"&data$spatial_scale=="admin2")&
!(data$country=='COG'&data$spatial_scale=='admin1')&
!(data$country=='SSD'&data$spatial_scale=='admin3')&
!(data$country=="SLE"&data$spatial_scale=="admin1")&
(!data$country=="ZMB")),]
location_period_pop=read.csv('C:/IDD/Cholera/Cholera_outbreaks/generated_data/population/location_period_pop_0424.csv')
location_period_pop=read.csv('C:/IDD/Cholera/Cholera_outbreaks/generated_data/population/location_period_pop_0424.csv')
location_period_pop=distinct(location_period_pop[which(!location_period_pop$population==0),colnames(location_period_pop)%in%c('location_period_id','year','population_density','area')])
data=merge(data,location_period_pop,by=c('year','location_period_id'))
summary(data$population_density)
summary(data$population_density)
summary(data$area)
100000000/170
100000000/174
1000000/174
38230*0.89
date='2021-07-20'
observation_file_name=paste0('generated_data/outbreak_',date,'/all_observations_',date,'.csv')
location_file_name=paste0('generated_data/outbreak_',date,'/all_locations_',date,'.csv')
location_file_name1=paste0('generated_data/outbreak_',date,'/all_trees_',date,'.csv')
cases_import=readr::read_csv(observation_file_name)
setwd("C:/IDD/Cholera/Cholera_outbreaks")
observation_file_name=paste0('generated_data/outbreak_',date,'/all_observations_',date,'.csv')
location_file_name=paste0('generated_data/outbreak_',date,'/all_locations_',date,'.csv')
location_file_name1=paste0('generated_data/outbreak_',date,'/all_trees_',date,'.csv')
setwd("C:/IDD/Cholera/cholera-mapping-pipeline/packages/taxdat")
devtools::document()
devtools::document()
devtools::document()
library(taxdat)
devtools::document()
devtools::install_github("klutometis/roxygen")
devtools::install_github("klutometis/roxygen")
devtools::install_github("klutometis/roxygen")
